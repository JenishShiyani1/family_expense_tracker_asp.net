@using System.Globalization
@model FinanceDashboardData

@if (TempData["UpdateSuccess"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            showSuccessMessage("@TempData["UpdateSuccess"]");
        });
    </script>
}

@if (TempData["UpdateError"] != null)
{
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            showErrorMessage("@TempData["UpdateError"]");
        });
    </script>
}

@if (ViewBag.Error != null)
{
    <p class="text-danger">@ViewBag.Error</p>
}


<div id="welcomeModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog model-sm">
        <div class="modal-content bg-light text-dark">
            <div class="modal-header">
                <h5 class="modal-title">Welcome to Family Expense Tracker!</h5>
                <button type="button" id="closeWelcomeModal" class="btn p-0 border-0 bg-transparent">
                    <span style="font-size: 20px; color: red;">❌</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Here's how to use the app:</p>
                <ul class="list-unstyled">
                    <li>✅ Add your income & expenses category-wise</li>
                    <li>✅ Set your monthly budget</li>
                    <li>✅ Add saving amount</li>
                    <li>✅ Track spending easily</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var hasSeenTutorial = sessionStorage.getItem("HasSeenTutorial");
        var welcomeModalElement = document.getElementById("welcomeModal");
        var welcomeModal = new bootstrap.Modal(welcomeModalElement);

        if (!hasSeenTutorial) {
            welcomeModal.show();
            setTimeout(function () {
                welcomeModal.hide();
                sessionStorage.setItem("HasSeenTutorial", "true");
            }, 20000);
        }

        // Close modal when the close button (icon) is clicked
        document.getElementById("closeWelcomeModal").addEventListener("click", function () {
            welcomeModal.hide();
            sessionStorage.setItem("HasSeenTutorial", "true");
        });
    });
</script>


@if (Model.Counts.Any())
{
    <div class="row">
        @for (int i = 0; i < Math.Min(3, Model.Counts.Count); i++)
        {
            var item = Model.Counts[i];

            string cardBgColor = i == 0 ? "color : white ; background-color : #41b23b" : (i == 1 ? "color : white ; background-color : #d1a82e" :  "color : white ; background-color : #da4545");
            string iconClass = i == 0 ? "mdi mdi-finance" : (i == 1 ? "mdi mdi-cash-multiple" : "mdi mdi-cart");
            string message = i == 0 ? "This Month Total Income" : (i == 1 ? "This Month Total Expense" : "This Month Total Saving");

            <div class="col-sm-4 grid-margin">
                <div class="card shadow-sm border-0 p-2" style="@cardBgColor">
                    <div class="card-body p-2">
                        <h6 class="mb-1">@item.Metric</h6>
                        <div class="row">
                            <div class="col-8 col-sm-12 col-xl-8 my-auto">
                                <div class="d-flex d-sm-block d-md-flex align-items-center">
                                    @if(item.Value > 0)
                                    {
                                        <h5 class="mb-1">@item.Value.ToString("C", new CultureInfo("en-IN"))</h5>
                                    }
                                    else
                                    {
                                        <h5 class="mb-1">0.00</h5>
                                    }
                                </div>
                                <small class="opacity-75">@message</small>
                            </div>
                            <div class="col-4 col-sm-12 col-xl-4 text-center text-xl-right">
                                <i class="icon-md display-1 @iconClass ml-auto"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

else
{
    <p>No count data available.</p>
}

<div class="row">
    <!-- Left Section: Category-Wise Expense or Message -->
    <div class="col-lg-5">
        <div class="card align-items-center shadow-sm">
            <div class="card-body text-center">
                @if (Model.CategoryWiseExpenses.Any())
                {
                    <h5 class="card-title">Category-Wise Expense</h5>
                    <div class="pie-chart-container" style="width: 300px; height: 300px;">
                        <canvas id="myPieChart"></canvas>
                    </div>
                }
                else
                {
                    <p class="text-danger fw-bold">No category-wise expense available.</p>
                }
            </div>
        </div>
    </div>

    <!-- Right Section: Family Member Table -->
    <div class="col-lg-7">
        @if (Model.FamilyAdmins.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4 class="mb-0" style="color: #2aa191">@Model.FamilyAdmins[0].FamilyGroupName Group Details</h4>
            </div>
        }

        @if (Model.FamilyMembers.Any() || Model.FamilyAdmins.Any())
        {
            <div class="table-responsive">
                <table class="table">
                    <thead class="table-dark">
                        <tr>
                            <th class="font-weight-bold">Name</th>
                            <th class="font-weight-bold">Role</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var admin in Model.FamilyAdmins)
                        {
                            <tr>
                                <td class="font-weight-bold">@admin.AdminName</td>
                                <td class="font-weight-bold">Admin</td>
                            </tr>
                        }
                        @foreach (var member in Model.FamilyMembers)
                        {
                            <tr>
                                <td>@member.MemberName</td>
                                <td>@member.Role</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p class="text-danger text-center fw-bold">No family members available.</p>
        }
    </div>
</div>



<!-- Tables for Recent Expenses and Incomes -->
<div class="row mt-4">
    <!-- Recent Expenses Table -->
    <div class="col-12">
        <h3>Recent Expenses</h3>
        @if (Model.RecentExpenses.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Category</th>
                            <th>Date</th>
                            <th class="text-right">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var expense in Model.RecentExpenses)
                        {
                            <tr>
                                <td>@expense.CategoryName</td>
                                <td>@expense.ExpenseDate.ToString("dd MMM yyyy")</td>
                                <td class="text-right">@expense.Amount.ToString("C", new CultureInfo("en-IN"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p class="card p-2 text-danger">No recent expenses.</p>
        }
    </div>
</div>

<div class="row mt-4">
    <!-- Recent Incomes Table -->
    <div class="col-12">
        <h3>Recent Incomes</h3>
        @if (Model.RecentIncomes.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Category</th>
                            <th>Date</th>
                            <th class="text-right">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var income in Model.RecentIncomes)
                        {
                            <tr>
                                <td>@income.CategoryName</td>
                                <td>@income.IncomeDate.ToString("dd MMM yyyy")</td>
                                <td class="text-right">@income.Amount.ToString("C", new CultureInfo("en-IN"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p class="card p-2 text-danger">No recent incomes.</p>
        }
    </div>
    </div>

<!-- Include Chart.js from CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var categoryNames = @Html.Raw(Json.Serialize(Model.CategoryWiseExpenses.Select(e => e.CategoryName).ToList()));
    var expenses = @Html.Raw(Json.Serialize(Model.CategoryWiseExpenses.Select(e => e.TotalExpense).ToList()));

    var ctx = document.getElementById('myPieChart').getContext('2d');

    var data = {
        labels: categoryNames, // Categories
        datasets: [{
            label: 'Expenses',
            data: expenses, // Corresponding expenses
            backgroundColor: [
                '#FF6384', '#36A2EB', '#FFCE56',
                '#FF9F00', '#4BC0C0', '#FF5733',
                '#DAF7A6', '#900C3F', '#581845',
                '#1E90FF', '#32CD32', '#FF1493'
            ],
            hoverBackgroundColor: [
                '#FF4C5B', '#2E9BDB', '#F7B32C',
                '#FF7A00', '#36B1A6', '#FF4F2F',
                '#C6F5A1', '#C11B47', '#9B1D3B',
                '#1C7ED6', '#3EBF3E', '#FF0080'
            ]
        }]
    };


    var myPieChart = new Chart(ctx, {
        type: 'pie',
        data: data,
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return tooltipItem.label + ': ₹ ' + tooltipItem.raw;
                        }
                    }
                }
            }
        }
    });
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var hasSeenTutorial = sessionStorage.getItem("HasSeenTutorial");
        var welcomeModalElement = document.getElementById("welcomeModal");
        var welcomeModal = new bootstrap.Modal(welcomeModalElement);

        if (!hasSeenTutorial) {
            welcomeModal.show();
            setTimeout(function () {
                welcomeModal.hide();
                sessionStorage.setItem("HasSeenTutorial", "true");
            }, 20000);
        }

        // Close modal when the red "Close" button is clicked
        document.getElementById("closeWelcomeModal").addEventListener("click", function () {
            welcomeModal.hide();
            sessionStorage.setItem("HasSeenTutorial", "true");
        });
    });
</script>
